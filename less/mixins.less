// Mixins
//-----------------------------------------------------

// Project specific mixins
// -------------------------

.ie7-inline-block() {
	display: inline;
	zoom: 1;
}


// mixins used by the reset
// -------------------------
// Webkit-style focus from https://github.com/twitter/bootstrap

.tab-focus() {
	// Default
	outline: thin dotted #333;
	// Webkit
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}


// mixins used by the grid
//--------------------------

// Clearfix
// --------

// https://github.com/twitter/bootstrap/blob/master/less/mixins.less#L9
.clearfix {
	*zoom: 1;
	&:before,
	&:after {
		display: table;
		content: "";
		// Fixes Opera/contenteditable bug:
		// http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
		line-height: 0;
	}
	&:after {
		clear: both;
	}
}

// Block level inputs
// -------------------------

// https://github.com/twitter/bootstrap/blob/master/less/mixins.less#L153
.input-block-level {
	display: block;
	width: 100%;
	min-height: 28px; // Make inputs at least the height of their button counterpart
	//.box-sizing(border-box); // Makes inputs behave like true block-level elements
}




// The Grid
// from bootstrap: https://github.com/twitter/bootstrap/blob/master/less/mixins.less#L546
//-----------------------------------------------------

#grid {

	.core (@gridColumnWidth, @gridGutterWidth) {

		.spanX (@index) when (@index > 0) {
			(~".span@{index}") { .span(@index); }
			.spanX(@index - 1);
		}
		.spanX (0) {}

		.offsetX (@index) when (@index > 0) {
			(~".offset@{index}") { .offset(@index); }
			.offsetX(@index - 1);
		}
		.offsetX (0) {}

		.offset (@columns) {
			margin-left: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns + 1));
		}

		.span (@columns) {
			width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
		}

		.row {
			margin-left: @gridGutterWidth * -1;
			.clearfix();
		}

		[class*="span"] {
			float: left;
			margin-left: @gridGutterWidth;
		}

		// Set the container width, and override it for fixed navbars in media queries
		.container,
		.navbar-fixed-top .container,
		.navbar-fixed-bottom .container { .span(@gridColumns); }

		// generate .spanX and .offsetX
		.spanX (@gridColumns);
		.offsetX (@gridColumns);

	}

	.fluid (@fluidGridColumnWidth, @fluidGridGutterWidth) {

		.spanX (@index) when (@index > 0) {
			(~".span@{index}") { .span(@index); }
			.spanX(@index - 1);
		}
		.spanX (0) {}

		.span (@columns) {
			width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1));
			*width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%);
		}

		.row-fluid {
			width: 100%;
			.clearfix();
			[class*="span"] {
				.input-block-level();
				float: left;
				margin-left: @fluidGridGutterWidth;
				*margin-left: @fluidGridGutterWidth - (.5 / @gridRowWidth * 100 * 1%);
			}
			[class*="span"]:first-child {
				margin-left: 0;
			}

			// generate .spanX
			.spanX (@gridColumns);
		}

	}

	.input(@gridColumnWidth, @gridGutterWidth) {

		.spanX (@index) when (@index > 0) {
			(~"input.span@{index}, textarea.span@{index}, .uneditable-input.span@{index}") { .span(@index); }
			.spanX(@index - 1);
		}
		.spanX (0) {}

		.span(@columns) {
			width: ((@gridColumnWidth) * @columns) + (@gridGutterWidth * (@columns - 1)) - 10;
		}

		input,
		textarea,
		.uneditable-input {
			margin-left: 0; // override margin-left from core grid system
		}

		// generate .spanX
		.spanX (@gridColumns);

	}

}


//---------------------------------------------------
//    Based on LESS Elements 0.6 by Dmitry Fadeyev
//  ---------------------------------------------------
//    More info at: http://lesselements.com
//-----------------------------------------------------
//
//	updates by Albert Scheiner 26/01/2013
//	- remove comments
//	- add support for old IE opacity
//	- remove outdated vendor prefixes
//
//	updates by Albert Scheiner 11/08/2012
//	- remove several mixins
//		where prefexes are not required any more
//		add links for reference
//	- add comments for browser support
//	- remove single out dated prefixed code
//-----------------------------------------------------



// @opacity
//   with IE6/7 and IE8 support
// ----------
.opacity (@opacity) {
	@opacityPercentage: @opacity * 100;
	opacity: @opacity;
	-ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=(@{opacityPercentage}))";
	filter: ~"alpha(opacity = (@{opacityPercentage}))";
}

// linear-gradient
// ------------------
// @w3c: http://www.w3.org/TR/css3-images/#linear-gradients
//	<linear-gradient> = linear-gradient(
//		[ [ <angle> | to <side-or-corner> ] ,]?
//		<color-stop>[, <color-stop>]+
//	)
// w3c: FF 16, Opera 12.1, MSIE 10
// -webkit: Chrome -25; Safari -6

.gradient(@dir-w3c: right, @dir-vendor: left, @color: #F5F5F5, @start: #EEE, @stop: #FFF) {
	background: @color;
	background: -webkit-linear-gradient(
		@dir-vendor,
		@start 0%,
		@stop 100%
	);
	background: linear-gradient(
		to @dir-w3c,
		@start 0%,
		@stop 100%
	);
}


// @transition
// --------------
// w3c: FF 16, Opera 12.1, MSIE 10
// -webkit: Chrome -26; Safari -6
.transition(@attribute: all, @duration: .2s, @ease: ease-out, @delay: 0) {
	-webkit-transition: @attribute @duration @ease @delay;
	transition: @attribute @duration @ease @delay;
}


// @transform
// ------------
// w3c: FF 16, Opera 12.5, MSIE 10
// -webkit: Chrome -26; Safari -6
// -ms: MSIE 9
.rotation(@deg:5deg){
	-webkit-transform: rotate(@deg);
	-ms-transform: rotate(@deg);
	transform: rotate(@deg);
}
.scale(@ratio:1.5){
	-webkit-transform:scale(@ratio);
	-ms-transform:scale(@ratio);
	transform:scale(@ratio);
}
.translate(@x:0, @y:0) {
	-webkit-transform: translate(@x, @y);
	-ms-transform: translate(@x, @y);
	transform: translate(@x, @y);
}


// @column
// --------
// w3c: Opera 12.0, IE 10
// -webkit: Chrome20+ (23+); Safari5.1+ (6+)
// -moz:	FF 3.6+ (16+)
.columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
	-webkit-column-width: @colwidth;
	-webkit-column-count: @colcount;
	-webkit-column-gap: @colgap;
	-webkit-column-rule-color: @columnRuleColor;
	-webkit-column-rule-style: @columnRuleStyle;
	-webkit-column-rule-width: @columnRuleWidth;
	-moz-column-width: @colwidth;
	-moz-column-count: @colcount;
	-moz-column-gap: @colgap;
	-moz-column-rule-color: @columnRuleColor;
	-moz-column-rule-style: @columnRuleStyle;
	-moz-column-rule-width: @columnRuleWidth;
	column-width: @colwidth;
	column-count: @colcount;
	column-gap: @colgap;
	column-rule-color: @columnRuleColor;
	column-rule-style: @columnRuleStyle;
	column-rule-width: @columnRuleWidth;
}
